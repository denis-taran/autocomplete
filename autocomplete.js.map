{"version":3,"file":"autocomplete.js","sources":["autocomplete.ts"],"sourcesContent":[" /*\r\n  * https://github.com/kraaden/autocomplete\r\n  * Copyright (c) 2016 Denys Krasnoshchok\r\n  * MIT License\r\n  */\r\n\r\n export const enum EventTrigger {\r\n    Keyboard = 0,\r\n    Focus = 1\r\n}\r\n\r\nexport interface AutocompleteItem {\r\n    label?: string;\r\n    group?: string;\r\n}\r\n\r\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\r\n    /**\r\n     * Autocomplete will be attached to this element.\r\n     */\r\n    input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    /**\r\n     * Provide your own container for the widget.\r\n     * If not specified, a new DIV element will be created.\r\n     */\r\n    container?: HTMLDivElement;\r\n\r\n    /**\r\n     * This method allows you to override the default rendering function for items.\r\n     * It must return a DIV element or undefined to skip rendering.\r\n     */\r\n    render?: (item: T, currentValue: string) => HTMLDivElement | undefined;\r\n\r\n    /**\r\n     * This method allows you to override the default rendering function for item groups.\r\n     * It must return a DIV element or undefined to skip rendering.\r\n     */\r\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\r\n\r\n    /**\r\n     * If specified, the autocomplete DOM element will have this class assigned to it.\r\n     */\r\n    className?: string;\r\n\r\n    /**\r\n     * Specify the minimum text length required to show autocomplete.\r\n     */\r\n    minLength?: number;\r\n\r\n    /**\r\n     * The message that will be showed when there are no suggestions that match the entered value.\r\n     */\r\n    emptyMsg?: string;\r\n\r\n    /**\r\n     * This method will be called when user choose an item in autocomplete. The selected item will be passed as the first parameter.\r\n     */\r\n    onSelect: (item: T, input: HTMLInputElement | HTMLTextAreaElement) => void;\r\n\r\n    /**\r\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\r\n     */\r\n    showOnFocus?: boolean;\r\n\r\n    /**\r\n     * This method will be called to prepare suggestions and then pass them to autocomplete.\r\n     * @param {string} text - text in the input field\r\n     * @param {(items: T[] | false) => void} update - a callback function that must be called after suggestions are prepared\r\n     * @param {EventTrigger} trigger - type of the event that triggered the fetch\r\n     * @param {number} cursorPos - position of the cursor in the input field\r\n     */\r\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger, cursorPos: number) => void;\r\n\r\n    /**\r\n     * Enforces that the fetch function will only be called once within the specified time frame (in milliseconds) and\r\n     * delays execution. This prevents flooding your server with AJAX requests.\r\n     */\r\n    debounceWaitMs?: number;\r\n\r\n    /**\r\n     * Callback for additional autocomplete customization\r\n     * @param {HTMLInputElement | HTMLTextAreaElement} input - input box associated with autocomplete\r\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\r\n     * @param {HTMLDivElement} container - container with suggestions\r\n     * @param {number} maxHeight - max height that can be used by autocomplete\r\n     */\r\n    customize?: (input: HTMLInputElement | HTMLTextAreaElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\r\n\r\n    /**\r\n     * Prevents automatic form submit when ENTER is pressed\r\n     */\r\n    preventSubmit?: boolean;\r\n    \r\n    /**\r\n     * Prevents the first item in the list from being selected automatically. This option allows you\r\n     * to submit a custom text by pressing ENTER even when autocomplete is displayed.\r\n     */\r\n    disableAutoSelect?: boolean;\r\n\r\n    /**\r\n     * Keys that will be ignored and not trigger the fetch callback.\r\n     */\r\n    keysToIgnore?: Keys[];\r\n}\r\n\r\nexport interface AutocompleteResult {\r\n    destroy: () => void;\r\n}\r\n\r\nexport const enum Keys {\r\n    Enter = 13,\r\n    Esc = 27,\r\n    Up = 38,\r\n    Down = 40,\r\n    Left = 37,\r\n    Right = 39,\r\n    Shift = 16,\r\n    Ctrl = 17,\r\n    Alt = 18,\r\n    CapsLock = 20,\r\n    WindowsKey = 91,\r\n    Tab = 9,\r\n    F1 = 112,\r\n    F12 = 123\r\n}\r\n\r\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\r\n\r\n    // just an alias to minimize JS file size\r\n    const doc = document;\r\n\r\n    const container: HTMLDivElement = settings.container || doc.createElement(\"div\");\r\n    let containerId = container.id;\r\n    if(!containerId || !containerId.length) {\r\n        let index = 0;\r\n        do {\r\n            containerId = \"autocomplete-\" + index++;\r\n        } while (doc.getElementById(containerId) != null && index < 100000);\r\n        container.id = containerId;\r\n    }\r\n    const containerStyle = container.style;\r\n    const userAgent = navigator.userAgent;\r\n    const mobileFirefox = ~userAgent.indexOf(\"Firefox\") && ~userAgent.indexOf(\"Mobile\");\r\n    const debounceWaitMs = settings.debounceWaitMs || 0;\r\n    const preventSubmit = settings.preventSubmit || false;\r\n    const disableAutoSelect = settings.disableAutoSelect || false;\r\n    \r\n    // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead\r\n    const keyUpEventName = mobileFirefox ? \"input\" : \"keyup\";\r\n    \r\n    let items: T[] = [];\r\n    let inputValue = \"\";\r\n    let minLen = 2;\r\n    const showOnFocus = settings.showOnFocus;\r\n    let selected: T | undefined;\r\n    let keypressCounter = 0;\r\n    let debounceTimer : number | undefined;\r\n\r\n    if (settings.minLength !== undefined) {\r\n        minLen = settings.minLength;\r\n    }\r\n\r\n    if (!settings.input) {\r\n        throw new Error(\"input undefined\");\r\n    }\r\n\r\n    const input: HTMLInputElement | HTMLTextAreaElement = settings.input;\r\n\r\n    container.className = \"autocomplete \" + (settings.className || \"\");\r\n    input.setAttribute(\"aria-role\", \"combobox\");\r\n    input.setAttribute(\"aria-expanded\", \"false\");\r\n    input.setAttribute(\"aria-autocomplete\", \"list\");\r\n    input.setAttribute(\"aria-controls\", containerId);\r\n    input.setAttribute(\"aria-activedescendant\", \"\");\r\n    container.setAttribute(\"aria-role\", \"listbox\");\r\n\r\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\r\n    containerStyle.position = \"absolute\";\r\n\r\n    /**\r\n     * Detach the container from DOM\r\n     */\r\n    function detach(): void {\r\n        const parent = container.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear debouncing timer if assigned\r\n     */\r\n    function clearDebounceTimer(): void {\r\n        if (debounceTimer) {\r\n            window.clearTimeout(debounceTimer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attach the container to DOM\r\n     */\r\n    function attach(): void {\r\n        if (!container.parentNode) {\r\n            doc.body.appendChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if container for autocomplete is displayed\r\n     */\r\n    function containerDisplayed(): boolean {\r\n        return !!container.parentNode;\r\n    }\r\n\r\n    /**\r\n     * Clear autocomplete state and hide container\r\n     */\r\n    function clear(): void {\r\n        // prevent the update call if there are pending AJAX requests\r\n        keypressCounter++;\r\n        \r\n        items = [];\r\n        inputValue = \"\";\r\n        selected = undefined;\r\n        input.setAttribute(\"aria-activedescendant\", \"\");\r\n        input.setAttribute(\"aria-expanded\", \"false\");\r\n        detach();\r\n    }\r\n\r\n    /**\r\n     * Update autocomplete position\r\n     */\r\n    function updatePosition(): void {\r\n        if (!containerDisplayed()) {\r\n            return;\r\n        }\r\n        \r\n        input.setAttribute(\"aria-expanded\", \"true\");\r\n\r\n        containerStyle.height = \"auto\";\r\n        containerStyle.width = input.offsetWidth + \"px\";\r\n\r\n        let maxHeight = 0;\r\n        let inputRect: ClientRect | DOMRect | undefined;\r\n\r\n        function calc() {\r\n            const docEl = doc.documentElement as HTMLElement;\r\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\r\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\r\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\r\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\r\n\r\n            inputRect = input.getBoundingClientRect();\r\n        \r\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\r\n            const left = inputRect.left + scrollLeft - clientLeft;\r\n    \r\n            containerStyle.top = top + \"px\";\r\n            containerStyle.left = left + \"px\";\r\n    \r\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n    \r\n            if (maxHeight < 0) {\r\n                maxHeight = 0;\r\n            }\r\n    \r\n            containerStyle.top = top + \"px\";\r\n            containerStyle.bottom = \"\";\r\n            containerStyle.left = left + \"px\";\r\n            containerStyle.maxHeight = maxHeight + \"px\";\r\n        }\r\n\r\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\r\n        calc();\r\n        calc();\r\n\r\n        if (settings.customize && inputRect) {\r\n            settings.customize(input, inputRect, container, maxHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions\r\n     */\r\n    function update(): void {\r\n        \r\n        // delete all children from autocomplete DOM container\r\n        while (container.firstChild) {\r\n            container.removeChild(container.firstChild);\r\n        }\r\n\r\n        // function for rendering autocomplete suggestions\r\n        let render = function(item: T, currentValue: string): HTMLDivElement | undefined {\r\n            const itemElement = doc.createElement(\"div\");\r\n            itemElement.textContent = item.label || \"\";\r\n            return itemElement;\r\n        };\r\n        if (settings.render) {\r\n            render = settings.render;\r\n        }\r\n\r\n        // function to render autocomplete groups\r\n        let renderGroup = function(groupName: string, currentValue: string): HTMLDivElement | undefined {\r\n            const groupDiv = doc.createElement(\"div\");\r\n            groupDiv.textContent = groupName;\r\n            return groupDiv;\r\n        };\r\n        if (settings.renderGroup) {\r\n            renderGroup = settings.renderGroup;\r\n        }\r\n\r\n        const fragment = doc.createDocumentFragment();\r\n        let prevGroup = \"#9?$\";\r\n\r\n        items.forEach(function(item: T, index: number): void {\r\n            if (item.group && item.group !== prevGroup) {\r\n                prevGroup = item.group;\r\n                const groupDiv = renderGroup(item.group, inputValue);\r\n                if (groupDiv) {\r\n                    groupDiv.className += \" group\";\r\n                    fragment.appendChild(groupDiv);\r\n                }\r\n            }\r\n            const div = render(item, inputValue);\r\n            if (div) {\r\n                div.id = `${containerId}_${index}`;\r\n                div.setAttribute(\"aria-role\", \"option\");\r\n                div.addEventListener(\"click\", function(ev: MouseEvent): void {\r\n                    settings.onSelect(item, input);\r\n                    clear();\r\n                    ev.preventDefault();\r\n                    ev.stopPropagation();\r\n                });\r\n                if (item === selected) {\r\n                    div.className += \" selected\";\r\n                    div.setAttribute(\"aria-selected\", \"true\");\r\n                    input.setAttribute(\"aria-activedescendant\", div.id);\r\n                }\r\n                fragment.appendChild(div);\r\n            }\r\n        });\r\n        container.appendChild(fragment);\r\n        if (items.length < 1) {\r\n            if (settings.emptyMsg) {\r\n                const empty = doc.createElement(\"div\");\r\n                empty.className = \"empty\";\r\n                empty.textContent = settings.emptyMsg;\r\n                container.appendChild(empty);\r\n            } else {\r\n                clear();\r\n                return;\r\n            }\r\n        }\r\n\r\n        attach();\r\n        updatePosition();\r\n\r\n        updateScroll();\r\n    }\r\n\r\n    function updateIfDisplayed(): void {\r\n        if (containerDisplayed()) {\r\n            update();\r\n        }\r\n    }\r\n\r\n    function resizeEventHandler(): void {\r\n        updateIfDisplayed();\r\n    }\r\n\r\n    function scrollEventHandler(e: Event): void {\r\n        if (e.target !== container) {\r\n            updateIfDisplayed();\r\n        } else {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function keyupEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        const ignore = settings.keysToIgnore || [Keys.Up, Keys.Enter, Keys.Esc, Keys.Right, Keys.Left, Keys.Shift, Keys.Ctrl, Keys.Alt, Keys.CapsLock, Keys.WindowsKey, Keys.Tab];\r\n        for (const key of ignore) {\r\n            if (keyCode === key) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (keyCode >= Keys.F1 && keyCode <= Keys.F12 && !settings.keysToIgnore) {\r\n            return;\r\n        }\r\n\r\n        // the down key is used to open autocomplete\r\n        if (keyCode === Keys.Down && containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        startFetch(EventTrigger.Keyboard);\r\n    }\r\n\r\n    /**\r\n     * Automatically move scroll bar if selected item is not visible\r\n     */\r\n    function updateScroll(): void {\r\n        const elements = container.getElementsByClassName(\"selected\");\r\n        if (elements.length > 0) {\r\n            let element = elements[0] as HTMLDivElement;\r\n            \r\n            // make group visible\r\n            const previous = element.previousElementSibling as HTMLDivElement;\r\n            if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\r\n                element = previous;\r\n            }\r\n\r\n            if (element.offsetTop < container.scrollTop) {\r\n                container.scrollTop = element.offsetTop;\r\n            } else {\r\n                const selectBottom = element.offsetTop + element.offsetHeight;\r\n                const containerBottom = container.scrollTop + container.offsetHeight;\r\n                if (selectBottom > containerBottom) {\r\n                    container.scrollTop += selectBottom - containerBottom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the previous item in suggestions\r\n     */\r\n    function selectPrev(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        } else {\r\n            if (selected === items[0]) {\r\n                selected = items[items.length - 1];\r\n            } else {\r\n                for (let i = items.length - 1; i > 0; i--) {\r\n                    if (selected === items[i] || i === 1) {\r\n                        selected = items[i - 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the next item in suggestions\r\n     */\r\n    function selectNext(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        }\r\n        if (!selected || selected === items[items.length - 1]) {\r\n            selected = items[0];\r\n            return;\r\n        }\r\n        for (let i = 0; i < (items.length - 1); i++) {\r\n            if (selected === items[i]) {\r\n                selected = items[i + 1];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function keydownEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        if (keyCode === Keys.Up || keyCode === Keys.Down || keyCode === Keys.Esc) {\r\n            const containerIsDisplayed = containerDisplayed();\r\n\r\n            if (keyCode === Keys.Esc) {\r\n                clear();\r\n            } else {\r\n                if (!containerIsDisplayed || items.length < 1) {\r\n                    return;\r\n                }\r\n                keyCode === Keys.Up\r\n                    ? selectPrev()\r\n                    : selectNext();\r\n                update();\r\n            }\r\n\r\n            ev.preventDefault();\r\n            if (containerIsDisplayed) {\r\n                ev.stopPropagation();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (keyCode === Keys.Enter) {\r\n            if (selected) {\r\n                settings.onSelect(selected, input);\r\n                clear();\r\n            }\r\n    \r\n            if (preventSubmit) {\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    function focusEventHandler(): void {\r\n        if (showOnFocus) {\r\n            startFetch(EventTrigger.Focus);\r\n        }\r\n    }\r\n\r\n    function startFetch(trigger: EventTrigger) {\r\n        // If multiple keys were pressed, before we get an update from server,\r\n        // this may cause redrawing autocomplete multiple times after the last key was pressed.\r\n        // To avoid this, the number of times keyboard was pressed will be saved and checked before redraw.\r\n        const savedKeypressCounter = ++keypressCounter;\r\n\r\n        const inputText = input.value;\r\n        const cursorPos = input.selectionStart || 0;\r\n\r\n        if (inputText.length >= minLen || trigger === EventTrigger.Focus) {\r\n            clearDebounceTimer();\r\n            debounceTimer = window.setTimeout(function(): void {\r\n                settings.fetch(inputText, function(elements: T[] | false): void {\r\n                    if (keypressCounter === savedKeypressCounter && elements) {\r\n                        items = elements;\r\n                        inputValue = inputText;\r\n                        selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];\r\n                        update();\r\n                    }\r\n                }, trigger, cursorPos);\r\n            }, trigger === EventTrigger.Keyboard ? debounceWaitMs : 0);\r\n        } else {\r\n            clear();\r\n        }\r\n    }\r\n\r\n    function blurEventHandler(): void {\r\n        // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\r\n        setTimeout(() => {\r\n            if (doc.activeElement !== input) {\r\n                clear();\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    /**\r\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n     */\r\n    container.addEventListener(\"mousedown\", function(evt: Event) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    });\r\n\r\n    /**\r\n     * Fixes #30: autocomplete closes when scrollbar is clicked in IE\r\n     * See: https://stackoverflow.com/a/9210267/13172349\r\n     */\r\n    container.addEventListener(\"focus\", () => input.focus());\r\n\r\n    /**\r\n     * This function will remove DOM elements and clear event handlers\r\n     */\r\n    function destroy(): void {\r\n        input.removeEventListener(\"focus\", focusEventHandler);\r\n        input.removeEventListener(\"keydown\", keydownEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener(\"blur\", blurEventHandler);\r\n        window.removeEventListener(\"resize\", resizeEventHandler);\r\n        doc.removeEventListener(\"scroll\", scrollEventHandler, true);\r\n        input.removeAttribute(\"aria-role\");\r\n        input.removeAttribute(\"aria-expanded\");\r\n        input.removeAttribute(\"aria-autocomplete\");\r\n        input.removeAttribute(\"aria-controls\");\r\n        input.removeAttribute(\"aria-activedescendant\");\r\n        clearDebounceTimer();\r\n        clear();\r\n    }\r\n\r\n    // setup event handlers\r\n    input.addEventListener(\"keydown\", keydownEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener(\"blur\", blurEventHandler);\r\n    input.addEventListener(\"focus\", focusEventHandler);\r\n    window.addEventListener(\"resize\", resizeEventHandler);\r\n    doc.addEventListener(\"scroll\", scrollEventHandler, true);\r\n\r\n    return {\r\n        destroy\r\n    };\r\n}\r\n"],"names":[],"mappings":"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"}